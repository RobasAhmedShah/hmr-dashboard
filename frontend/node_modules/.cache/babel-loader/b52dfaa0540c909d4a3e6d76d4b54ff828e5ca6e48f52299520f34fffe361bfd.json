{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mughal_Here\\\\Desktop\\\\HMR Project\\\\frontend\\\\src\\\\components\\\\admin\\\\AdminAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminAuthContext = /*#__PURE__*/createContext();\nexport const AdminAuthProvider = ({\n  children\n}) => {\n  _s();\n  const [adminUser, setAdminUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('AdminAuth: Initializing...');\n    // Check for existing admin session\n    const adminSession = localStorage.getItem('adminSession');\n    const adminUserData = localStorage.getItem('adminUser');\n    console.log('AdminAuth: adminSession =', adminSession);\n    console.log('AdminAuth: adminUserData =', adminUserData);\n    if (adminSession === 'true' && adminUserData) {\n      try {\n        const userData = JSON.parse(adminUserData);\n        console.log('AdminAuth: Setting admin user:', userData);\n        setAdminUser(userData);\n      } catch (error) {\n        console.error('Error parsing admin user data:', error);\n        localStorage.removeItem('adminSession');\n        localStorage.removeItem('adminUser');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = userData => {\n    console.log('AdminAuth: login called with:', userData);\n    setAdminUser(userData);\n    localStorage.setItem('adminSession', 'true');\n    localStorage.setItem('adminUser', JSON.stringify(userData));\n    console.log('AdminAuth: login completed, user set to:', userData);\n  };\n  const logout = () => {\n    setAdminUser(null);\n    localStorage.removeItem('adminSession');\n    localStorage.removeItem('adminUser');\n    navigate('/admin/login');\n  };\n  const value = {\n    adminUser,\n    isAuthenticated: !!adminUser,\n    isLoading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AdminAuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminAuthProvider, \"jgBY3OeaSDoFijnTLOuZKPigIxA=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminAuthProvider;\nexport const useAdminAuth = () => {\n  _s2();\n  const context = useContext(AdminAuthContext);\n  if (!context) {\n    throw new Error('useAdminAuth must be used within an AdminAuthProvider');\n  }\n  return context;\n};\n_s2(useAdminAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AdminAuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AdminAuthContext","AdminAuthProvider","children","_s","adminUser","setAdminUser","isLoading","setIsLoading","navigate","console","log","adminSession","localStorage","getItem","adminUserData","userData","JSON","parse","error","removeItem","login","setItem","stringify","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAdminAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Mughal_Here/Desktop/HMR Project/frontend/src/components/admin/AdminAuth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AdminAuthContext = createContext();\r\n\r\nexport const AdminAuthProvider = ({ children }) => {\r\n  const [adminUser, setAdminUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log('AdminAuth: Initializing...');\r\n    // Check for existing admin session\r\n    const adminSession = localStorage.getItem('adminSession');\r\n    const adminUserData = localStorage.getItem('adminUser');\r\n    \r\n    console.log('AdminAuth: adminSession =', adminSession);\r\n    console.log('AdminAuth: adminUserData =', adminUserData);\r\n    \r\n    if (adminSession === 'true' && adminUserData) {\r\n      try {\r\n        const userData = JSON.parse(adminUserData);\r\n        console.log('AdminAuth: Setting admin user:', userData);\r\n        setAdminUser(userData);\r\n      } catch (error) {\r\n        console.error('Error parsing admin user data:', error);\r\n        localStorage.removeItem('adminSession');\r\n        localStorage.removeItem('adminUser');\r\n      }\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    console.log('AdminAuth: login called with:', userData);\r\n    setAdminUser(userData);\r\n    localStorage.setItem('adminSession', 'true');\r\n    localStorage.setItem('adminUser', JSON.stringify(userData));\r\n    console.log('AdminAuth: login completed, user set to:', userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    setAdminUser(null);\r\n    localStorage.removeItem('adminSession');\r\n    localStorage.removeItem('adminUser');\r\n    navigate('/admin/login');\r\n  };\r\n\r\n  const value = {\r\n    adminUser,\r\n    isAuthenticated: !!adminUser,\r\n    isLoading,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AdminAuthContext.Provider value={value}>\r\n      {children}\r\n    </AdminAuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAdminAuth = () => {\r\n  const context = useContext(AdminAuthContext);\r\n  if (!context) {\r\n    throw new Error('useAdminAuth must be used within an AdminAuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}