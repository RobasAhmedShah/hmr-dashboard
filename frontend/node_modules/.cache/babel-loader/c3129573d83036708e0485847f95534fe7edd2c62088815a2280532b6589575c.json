{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mughal_Here\\\\Desktop\\\\HMR Project\\\\frontend\\\\src\\\\contexts\\\\OrganizationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrganizationContext = /*#__PURE__*/createContext(null);\n\n/**\r\n * Organization Provider - Detects and provides organization context\r\n * Based on subdomain (e.g., hmr.yourdomain.com → HMR organization)\r\n */\nexport const OrganizationProvider = ({\n  children\n}) => {\n  _s();\n  const [organization, setOrganization] = useState(null);\n  const [subdomain, setSubdomain] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    detectOrganization();\n  }, []);\n  const detectOrganization = () => {\n    const hostname = window.location.hostname;\n    const parts = hostname.split('.');\n\n    // Map subdomains to organization names\n    const organizationMap = {\n      'hmr': 'HMR',\n      'saima': 'Saima',\n      'marina': 'Marina'\n      // Add more organizations as needed\n    };\n\n    // Detect subdomain\n    let detectedSubdomain = null;\n    let detectedOrganization = null;\n    if (hostname === 'localhost' || /^\\d+\\.\\d+\\.\\d+\\.\\d+$/.test(hostname)) {\n      // Localhost or IP - Admin mode\n      setIsAdmin(true);\n      setOrganization(null);\n      setSubdomain('admin');\n      console.log('👨‍💼 Admin mode - showing all organizations');\n    } else if (parts.length >= 3) {\n      var _detectedSubdomain;\n      // Has subdomain (e.g., hmr.yourdomain.com)\n      detectedSubdomain = parts[0];\n      detectedOrganization = organizationMap[(_detectedSubdomain = detectedSubdomain) === null || _detectedSubdomain === void 0 ? void 0 : _detectedSubdomain.toLowerCase()];\n      if (detectedOrganization) {\n        setOrganization(detectedOrganization);\n        setSubdomain(detectedSubdomain);\n        setIsAdmin(false);\n        console.log(`🏢 Organization: ${detectedOrganization} (${detectedSubdomain})`);\n      } else {\n        // Unknown subdomain - treat as admin\n        setIsAdmin(true);\n        setOrganization(null);\n        setSubdomain('admin');\n        console.log('⚠️ Unknown subdomain, defaulting to admin mode');\n      }\n    } else {\n      // No subdomain - Admin mode\n      setIsAdmin(true);\n      setOrganization(null);\n      setSubdomain('admin');\n      console.log('👨‍💼 No subdomain - admin mode');\n    }\n    setLoading(false);\n  };\n  const value = {\n    organization,\n    // e.g., \"HMR\", \"Saima\", null\n    subdomain,\n    // e.g., \"hmr\", \"saima\", \"admin\"\n    isAdmin,\n    // true if admin mode (localhost or no subdomain)\n    loading,\n    // Helper methods\n    isOrganization: orgName => organization === orgName,\n    getOrganizationFilter: () => {\n      if (isAdmin) return null; // No filter - show all\n      return organization; // Filter by organization\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading organization...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(OrganizationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Hook to access organization context\r\n * @returns {{\r\n *   organization: string|null,\r\n *   subdomain: string,\r\n *   isAdmin: boolean,\r\n *   loading: boolean,\r\n *   isOrganization: (orgName: string) => boolean,\r\n *   getOrganizationFilter: () => string|null\r\n * }}\r\n */\n_s(OrganizationProvider, \"Noxw1dwjRKHtQBNF5zVWdteiQTM=\");\n_c = OrganizationProvider;\nexport const useOrganization = () => {\n  _s2();\n  const context = useContext(OrganizationContext);\n  if (!context) {\n    throw new Error('useOrganization must be used within OrganizationProvider');\n  }\n  return context;\n};\n_s2(useOrganization, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default OrganizationContext;\nvar _c;\n$RefreshReg$(_c, \"OrganizationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","OrganizationContext","OrganizationProvider","children","_s","organization","setOrganization","subdomain","setSubdomain","isAdmin","setIsAdmin","loading","setLoading","detectOrganization","hostname","window","location","parts","split","organizationMap","detectedSubdomain","detectedOrganization","test","console","log","length","_detectedSubdomain","toLowerCase","value","isOrganization","orgName","getOrganizationFilter","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useOrganization","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Mughal_Here/Desktop/HMR Project/frontend/src/contexts/OrganizationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst OrganizationContext = createContext(null);\r\n\r\n/**\r\n * Organization Provider - Detects and provides organization context\r\n * Based on subdomain (e.g., hmr.yourdomain.com → HMR organization)\r\n */\r\nexport const OrganizationProvider = ({ children }) => {\r\n  const [organization, setOrganization] = useState(null);\r\n  const [subdomain, setSubdomain] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    detectOrganization();\r\n  }, []);\r\n\r\n  const detectOrganization = () => {\r\n    const hostname = window.location.hostname;\r\n    const parts = hostname.split('.');\r\n\r\n    // Map subdomains to organization names\r\n    const organizationMap = {\r\n      'hmr': 'HMR',\r\n      'saima': 'Saima',\r\n      'marina': 'Marina',\r\n      // Add more organizations as needed\r\n    };\r\n\r\n    // Detect subdomain\r\n    let detectedSubdomain = null;\r\n    let detectedOrganization = null;\r\n\r\n    if (hostname === 'localhost' || /^\\d+\\.\\d+\\.\\d+\\.\\d+$/.test(hostname)) {\r\n      // Localhost or IP - Admin mode\r\n      setIsAdmin(true);\r\n      setOrganization(null);\r\n      setSubdomain('admin');\r\n      console.log('👨‍💼 Admin mode - showing all organizations');\r\n    } else if (parts.length >= 3) {\r\n      // Has subdomain (e.g., hmr.yourdomain.com)\r\n      detectedSubdomain = parts[0];\r\n      detectedOrganization = organizationMap[detectedSubdomain?.toLowerCase()];\r\n      \r\n      if (detectedOrganization) {\r\n        setOrganization(detectedOrganization);\r\n        setSubdomain(detectedSubdomain);\r\n        setIsAdmin(false);\r\n        console.log(`🏢 Organization: ${detectedOrganization} (${detectedSubdomain})`);\r\n      } else {\r\n        // Unknown subdomain - treat as admin\r\n        setIsAdmin(true);\r\n        setOrganization(null);\r\n        setSubdomain('admin');\r\n        console.log('⚠️ Unknown subdomain, defaulting to admin mode');\r\n      }\r\n    } else {\r\n      // No subdomain - Admin mode\r\n      setIsAdmin(true);\r\n      setOrganization(null);\r\n      setSubdomain('admin');\r\n      console.log('👨‍💼 No subdomain - admin mode');\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const value = {\r\n    organization,      // e.g., \"HMR\", \"Saima\", null\r\n    subdomain,         // e.g., \"hmr\", \"saima\", \"admin\"\r\n    isAdmin,           // true if admin mode (localhost or no subdomain)\r\n    loading,\r\n    \r\n    // Helper methods\r\n    isOrganization: (orgName) => organization === orgName,\r\n    getOrganizationFilter: () => {\r\n      if (isAdmin) return null; // No filter - show all\r\n      return organization;       // Filter by organization\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading organization...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <OrganizationContext.Provider value={value}>\r\n      {children}\r\n    </OrganizationContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Hook to access organization context\r\n * @returns {{\r\n *   organization: string|null,\r\n *   subdomain: string,\r\n *   isAdmin: boolean,\r\n *   loading: boolean,\r\n *   isOrganization: (orgName: string) => boolean,\r\n *   getOrganizationFilter: () => string|null\r\n * }}\r\n */\r\nexport const useOrganization = () => {\r\n  const context = useContext(OrganizationContext);\r\n  if (!context) {\r\n    throw new Error('useOrganization must be used within OrganizationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default OrganizationContext;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}