{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mughal_Here\\\\Desktop\\\\HMR Project\\\\frontend\\\\src\\\\components\\\\organization\\\\OrganizationAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { organizationsAPI, orgAdminAPI } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrganizationAuthContext = /*#__PURE__*/createContext(null);\n\n// Quick login credentials (for convenience - actual auth goes through backend)\nconst ORGANIZATION_CREDENTIALS = {\n  'hmr': {\n    email: 'admin@hmr.com',\n    password: 'hmr123',\n    displayName: 'HMR Company'\n  },\n  'saima': {\n    email: 'admin@saima.com',\n    password: 'saima123',\n    displayName: 'Saima Company'\n  }\n};\nexport const OrganizationAuthProvider = ({\n  children\n}) => {\n  _s();\n  const [organizationUser, setOrganizationUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const orgSession = localStorage.getItem('orgSession');\n    const orgUserData = localStorage.getItem('orgUser');\n    if (orgSession === 'true' && orgUserData) {\n      try {\n        const userData = JSON.parse(orgUserData);\n        setOrganizationUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error parsing organization user data:', error);\n        localStorage.removeItem('orgSession');\n        localStorage.removeItem('orgUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      var _orgDetails, _orgDetails2, _orgDetails3, _orgDetails4, _orgDetails5, _orgDetails6, _orgDetails7;\n      console.log('🔐 Organization Admin Login:', {\n        email\n      });\n\n      // Use new org admin login API\n      const response = await orgAdminAPI.orgAdminLogin({\n        email,\n        password\n      });\n      console.log('✅ Login API response:', response);\n      const loginData = response.data || response;\n      const {\n        organizationId,\n        admin,\n        organization\n      } = loginData;\n\n      // If organization details not included in login response, fetch them\n      let orgDetails = organization;\n      if (!orgDetails && organizationId) {\n        try {\n          var _orgResponse$data;\n          const orgResponse = await organizationsAPI.getById(organizationId);\n          orgDetails = ((_orgResponse$data = orgResponse.data) === null || _orgResponse$data === void 0 ? void 0 : _orgResponse$data.organization) || orgResponse.data;\n          console.log('✅ Fetched organization details:', orgDetails);\n        } catch (err) {\n          console.warn('⚠️ Could not fetch organization details:', err);\n        }\n      }\n\n      // Check for quick login display name override\n      const quickLoginEntry = Object.values(ORGANIZATION_CREDENTIALS).find(cred => cred.email === email);\n      const displayName = (quickLoginEntry === null || quickLoginEntry === void 0 ? void 0 : quickLoginEntry.displayName) || ((_orgDetails = orgDetails) === null || _orgDetails === void 0 ? void 0 : _orgDetails.name) || (admin === null || admin === void 0 ? void 0 : admin.organizationName) || 'Organization';\n\n      // Store auth data\n      const userData = {\n        email: (admin === null || admin === void 0 ? void 0 : admin.email) || email,\n        organizationName: displayName,\n        backendOrganizationName: (_orgDetails2 = orgDetails) === null || _orgDetails2 === void 0 ? void 0 : _orgDetails2.name,\n        organizationId: ((_orgDetails3 = orgDetails) === null || _orgDetails3 === void 0 ? void 0 : _orgDetails3.id) || ((_orgDetails4 = orgDetails) === null || _orgDetails4 === void 0 ? void 0 : _orgDetails4._id) || organizationId,\n        displayCode: ((_orgDetails5 = orgDetails) === null || _orgDetails5 === void 0 ? void 0 : _orgDetails5.displayCode) || ((_orgDetails6 = orgDetails) === null || _orgDetails6 === void 0 ? void 0 : _orgDetails6.display_code),\n        organizationSlug: (_orgDetails7 = orgDetails) === null || _orgDetails7 === void 0 ? void 0 : _orgDetails7.slug,\n        adminId: (admin === null || admin === void 0 ? void 0 : admin.id) || (admin === null || admin === void 0 ? void 0 : admin._id),\n        adminFullName: (admin === null || admin === void 0 ? void 0 : admin.fullName) || (admin === null || admin === void 0 ? void 0 : admin.full_name),\n        role: 'organization_admin',\n        loginTime: new Date().toISOString(),\n        organizationData: orgDetails\n      };\n      console.log('✅ Organization login successful!');\n      console.log('📌 Organization ID:', userData.organizationId);\n      console.log('📌 Display Name:', userData.organizationName);\n      console.log('📌 Backend Name:', userData.backendOrganizationName);\n      console.log('📌 Admin ID:', userData.adminId);\n      console.log('📌 Full user data:', userData);\n      setOrganizationUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('orgSession', 'true');\n      localStorage.setItem('orgUser', JSON.stringify(userData));\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ Login error:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please check your credentials.';\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    setOrganizationUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('orgSession');\n    localStorage.removeItem('orgUser');\n  };\n  return /*#__PURE__*/_jsxDEV(OrganizationAuthContext.Provider, {\n    value: {\n      organizationUser,\n      isAuthenticated,\n      loading,\n      login,\n      logout,\n      // Convenience accessors\n      organizationId: organizationUser === null || organizationUser === void 0 ? void 0 : organizationUser.organizationId,\n      organizationName: organizationUser === null || organizationUser === void 0 ? void 0 : organizationUser.organizationName,\n      displayCode: organizationUser === null || organizationUser === void 0 ? void 0 : organizationUser.displayCode,\n      adminId: organizationUser === null || organizationUser === void 0 ? void 0 : organizationUser.adminId,\n      adminEmail: organizationUser === null || organizationUser === void 0 ? void 0 : organizationUser.email,\n      adminFullName: organizationUser === null || organizationUser === void 0 ? void 0 : organizationUser.adminFullName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(OrganizationAuthProvider, \"cYnEyG5A+PMlHURF8s7BiT1cLn8=\");\n_c = OrganizationAuthProvider;\nexport const useOrganizationAuth = () => {\n  _s2();\n  const context = useContext(OrganizationAuthContext);\n  if (!context) {\n    throw new Error('useOrganizationAuth must be used within OrganizationAuthProvider');\n  }\n  return context;\n};\n_s2(useOrganizationAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"OrganizationAuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","organizationsAPI","orgAdminAPI","jsxDEV","_jsxDEV","OrganizationAuthContext","ORGANIZATION_CREDENTIALS","email","password","displayName","OrganizationAuthProvider","children","_s","organizationUser","setOrganizationUser","isAuthenticated","setIsAuthenticated","loading","setLoading","orgSession","localStorage","getItem","orgUserData","userData","JSON","parse","error","console","removeItem","login","_orgDetails","_orgDetails2","_orgDetails3","_orgDetails4","_orgDetails5","_orgDetails6","_orgDetails7","log","response","orgAdminLogin","loginData","data","organizationId","admin","organization","orgDetails","_orgResponse$data","orgResponse","getById","err","warn","quickLoginEntry","Object","values","find","cred","name","organizationName","backendOrganizationName","id","_id","displayCode","display_code","organizationSlug","slug","adminId","adminFullName","fullName","full_name","role","loginTime","Date","toISOString","organizationData","setItem","stringify","_error$response","_error$response$data","errorMessage","message","Error","logout","Provider","value","adminEmail","fileName","_jsxFileName","lineNumber","columnNumber","_c","useOrganizationAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Mughal_Here/Desktop/HMR Project/frontend/src/components/organization/OrganizationAuth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { organizationsAPI, orgAdminAPI } from '../../services/api';\r\n\r\nconst OrganizationAuthContext = createContext(null);\r\n\r\n// Quick login credentials (for convenience - actual auth goes through backend)\r\nconst ORGANIZATION_CREDENTIALS = {\r\n  'hmr': {\r\n    email: 'admin@hmr.com',\r\n    password: 'hmr123',\r\n    displayName: 'HMR Company',\r\n  },\r\n  'saima': {\r\n    email: 'admin@saima.com',\r\n    password: 'saima123',\r\n    displayName: 'Saima Company',\r\n  }\r\n};\r\n\r\nexport const OrganizationAuthProvider = ({ children }) => {\r\n  const [organizationUser, setOrganizationUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const orgSession = localStorage.getItem('orgSession');\r\n    const orgUserData = localStorage.getItem('orgUser');\r\n    \r\n    if (orgSession === 'true' && orgUserData) {\r\n      try {\r\n        const userData = JSON.parse(orgUserData);\r\n        setOrganizationUser(userData);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Error parsing organization user data:', error);\r\n        localStorage.removeItem('orgSession');\r\n        localStorage.removeItem('orgUser');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      console.log('🔐 Organization Admin Login:', { email });\r\n\r\n      // Use new org admin login API\r\n      const response = await orgAdminAPI.orgAdminLogin({ email, password });\r\n      \r\n      console.log('✅ Login API response:', response);\r\n\r\n      const loginData = response.data || response;\r\n      const { organizationId, admin, organization } = loginData;\r\n\r\n      // If organization details not included in login response, fetch them\r\n      let orgDetails = organization;\r\n      if (!orgDetails && organizationId) {\r\n        try {\r\n          const orgResponse = await organizationsAPI.getById(organizationId);\r\n          orgDetails = orgResponse.data?.organization || orgResponse.data;\r\n          console.log('✅ Fetched organization details:', orgDetails);\r\n        } catch (err) {\r\n          console.warn('⚠️ Could not fetch organization details:', err);\r\n        }\r\n      }\r\n\r\n      // Check for quick login display name override\r\n      const quickLoginEntry = Object.values(ORGANIZATION_CREDENTIALS).find(\r\n        cred => cred.email === email\r\n      );\r\n      const displayName = quickLoginEntry?.displayName || orgDetails?.name || admin?.organizationName || 'Organization';\r\n\r\n      // Store auth data\r\n      const userData = {\r\n        email: admin?.email || email,\r\n        organizationName: displayName,\r\n        backendOrganizationName: orgDetails?.name,\r\n        organizationId: orgDetails?.id || orgDetails?._id || organizationId,\r\n        displayCode: orgDetails?.displayCode || orgDetails?.display_code,\r\n        organizationSlug: orgDetails?.slug,\r\n        adminId: admin?.id || admin?._id,\r\n        adminFullName: admin?.fullName || admin?.full_name,\r\n        role: 'organization_admin',\r\n        loginTime: new Date().toISOString(),\r\n        organizationData: orgDetails\r\n      };\r\n\r\n      console.log('✅ Organization login successful!');\r\n      console.log('📌 Organization ID:', userData.organizationId);\r\n      console.log('📌 Display Name:', userData.organizationName);\r\n      console.log('📌 Backend Name:', userData.backendOrganizationName);\r\n      console.log('📌 Admin ID:', userData.adminId);\r\n      console.log('📌 Full user data:', userData);\r\n\r\n      setOrganizationUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('orgSession', 'true');\r\n      localStorage.setItem('orgUser', JSON.stringify(userData));\r\n\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('❌ Login error:', error);\r\n      const errorMessage = error.response?.data?.message || 'Login failed. Please check your credentials.';\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setOrganizationUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('orgSession');\r\n    localStorage.removeItem('orgUser');\r\n  };\r\n\r\n  return (\r\n    <OrganizationAuthContext.Provider \r\n      value={{ \r\n        organizationUser, \r\n        isAuthenticated, \r\n        loading, \r\n        login, \r\n        logout,\r\n        // Convenience accessors\r\n        organizationId: organizationUser?.organizationId,\r\n        organizationName: organizationUser?.organizationName,\r\n        displayCode: organizationUser?.displayCode,\r\n        adminId: organizationUser?.adminId,\r\n        adminEmail: organizationUser?.email,\r\n        adminFullName: organizationUser?.adminFullName\r\n      }}\r\n    >\r\n      {children}\r\n    </OrganizationAuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useOrganizationAuth = () => {\r\n  const context = useContext(OrganizationAuthContext);\r\n  if (!context) {\r\n    throw new Error('useOrganizationAuth must be used within OrganizationAuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}