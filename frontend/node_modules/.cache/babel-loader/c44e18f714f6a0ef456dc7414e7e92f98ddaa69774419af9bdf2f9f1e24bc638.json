{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mughal_Here\\\\Desktop\\\\HMR Project\\\\frontend\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { usersAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n\n  // Fetch users from database\n  const {\n    data: usersData,\n    isLoading: usersLoading,\n    error: usersError\n  } = useQuery('users', () => usersAPI.getAll(), {\n    onSuccess: data => {\n      var _data$data;\n      console.log('Users API response:', data);\n      const fetchedUsers = (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data) || [];\n      setUsers(fetchedUsers);\n\n      // Set first user as default if no current user\n      if (!currentUser && fetchedUsers.length > 0) {\n        console.log('Setting default user:', fetchedUsers[0]);\n        setCurrentUser(fetchedUsers[0]);\n      }\n    },\n    onError: error => {\n      console.error('Failed to fetch users:', error);\n      // Fallback to hardcoded users if API fails\n      const fallbackUsers = [{\n        id: 'a6702919-c381-4ebe-881a-4c3045d5f551',\n        name: 'Afraz Alam',\n        firstName: 'Afraz',\n        lastName: 'Alam',\n        email: 'afrazalam@example.com',\n        phone: '+92-300-1234567',\n        kycStatus: 'verified'\n      }];\n      setUsers(fallbackUsers);\n      setCurrentUser(fallbackUsers[0]);\n    }\n  });\n  const switchUser = userId => {\n    const user = users.find(u => u.id === userId);\n    if (user) {\n      console.log('Switching to user:', user);\n      setCurrentUser(user);\n    }\n  };\n  const refreshUsers = async () => {\n    try {\n      var _response$data, _response$data2, _response$data2$data;\n      const response = await usersAPI.getAllUsers();\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && (_response$data2$data = _response$data2.data) !== null && _response$data2$data !== void 0 && _response$data2$data.users) {\n        const dbUsers = response.data.data.users;\n        setUsers(dbUsers);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error refreshing users:', error);\n      return false;\n    }\n  };\n  const value = {\n    currentUser,\n    switchUser,\n    users,\n    usersLoading,\n    usersError,\n    refreshUsers\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"rM3zbLFavtcyvBWbO5w4TlgebtU=\", false, function () {\n  return [useQuery];\n});\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useQuery","usersAPI","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","currentUser","setCurrentUser","users","setUsers","data","usersData","isLoading","usersLoading","error","usersError","getAll","onSuccess","_data$data","console","log","fetchedUsers","length","onError","fallbackUsers","id","name","firstName","lastName","email","phone","kycStatus","switchUser","userId","user","find","u","refreshUsers","_response$data","_response$data2","_response$data2$data","response","getAllUsers","success","dbUsers","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Mughal_Here/Desktop/HMR Project/frontend/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { usersAPI } from '../services/api';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // Fetch users from database\r\n  const { data: usersData, isLoading: usersLoading, error: usersError } = useQuery(\r\n    'users',\r\n    () => usersAPI.getAll(),\r\n    {\r\n      onSuccess: (data) => {\r\n        console.log('Users API response:', data);\r\n        const fetchedUsers = data?.data?.data || [];\r\n        setUsers(fetchedUsers);\r\n        \r\n        // Set first user as default if no current user\r\n        if (!currentUser && fetchedUsers.length > 0) {\r\n          console.log('Setting default user:', fetchedUsers[0]);\r\n          setCurrentUser(fetchedUsers[0]);\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        console.error('Failed to fetch users:', error);\r\n        // Fallback to hardcoded users if API fails\r\n        const fallbackUsers = [\r\n          {\r\n            id: 'a6702919-c381-4ebe-881a-4c3045d5f551',\r\n            name: 'Afraz Alam',\r\n            firstName: 'Afraz',\r\n            lastName: 'Alam',\r\n            email: 'afrazalam@example.com',\r\n            phone: '+92-300-1234567',\r\n            kycStatus: 'verified'\r\n          }\r\n        ];\r\n        setUsers(fallbackUsers);\r\n        setCurrentUser(fallbackUsers[0]);\r\n      }\r\n    }\r\n  );\r\n\r\n  const switchUser = (userId) => {\r\n    const user = users.find(u => u.id === userId);\r\n    if (user) {\r\n      console.log('Switching to user:', user);\r\n      setCurrentUser(user);\r\n    }\r\n  };\r\n\r\n  const refreshUsers = async () => {\r\n    try {\r\n      const response = await usersAPI.getAllUsers();\r\n      if (response.data?.success && response.data?.data?.users) {\r\n        const dbUsers = response.data.data.users;\r\n        setUsers(dbUsers);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Error refreshing users:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    switchUser,\r\n    users,\r\n    usersLoading,\r\n    usersError,\r\n    refreshUsers\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM;IAAEc,IAAI,EAAEC,SAAS;IAAEC,SAAS,EAAEC,YAAY;IAAEC,KAAK,EAAEC;EAAW,CAAC,GAAGjB,QAAQ,CAC9E,OAAO,EACP,MAAMC,QAAQ,CAACiB,MAAM,CAAC,CAAC,EACvB;IACEC,SAAS,EAAGP,IAAI,IAAK;MAAA,IAAAQ,UAAA;MACnBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEV,IAAI,CAAC;MACxC,MAAMW,YAAY,GAAG,CAAAX,IAAI,aAAJA,IAAI,wBAAAQ,UAAA,GAAJR,IAAI,CAAEA,IAAI,cAAAQ,UAAA,uBAAVA,UAAA,CAAYR,IAAI,KAAI,EAAE;MAC3CD,QAAQ,CAACY,YAAY,CAAC;;MAEtB;MACA,IAAI,CAACf,WAAW,IAAIe,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3CH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,YAAY,CAAC,CAAC,CAAC,CAAC;QACrDd,cAAc,CAACc,YAAY,CAAC,CAAC,CAAC,CAAC;MACjC;IACF,CAAC;IACDE,OAAO,EAAGT,KAAK,IAAK;MAClBK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;MACA,MAAMU,aAAa,GAAG,CACpB;QACEC,EAAE,EAAE,sCAAsC;QAC1CC,IAAI,EAAE,YAAY;QAClBC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE,MAAM;QAChBC,KAAK,EAAE,uBAAuB;QAC9BC,KAAK,EAAE,iBAAiB;QACxBC,SAAS,EAAE;MACb,CAAC,CACF;MACDtB,QAAQ,CAACe,aAAa,CAAC;MACvBjB,cAAc,CAACiB,aAAa,CAAC,CAAC,CAAC,CAAC;IAClC;EACF,CACF,CAAC;EAED,MAAMQ,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMC,IAAI,GAAG1B,KAAK,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACX,EAAE,KAAKQ,MAAM,CAAC;IAC7C,IAAIC,IAAI,EAAE;MACRf,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEc,IAAI,CAAC;MACvC3B,cAAc,CAAC2B,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAC,oBAAA;MACF,MAAMC,QAAQ,GAAG,MAAM1C,QAAQ,CAAC2C,WAAW,CAAC,CAAC;MAC7C,IAAI,CAAAJ,cAAA,GAAAG,QAAQ,CAAC/B,IAAI,cAAA4B,cAAA,eAAbA,cAAA,CAAeK,OAAO,KAAAJ,eAAA,GAAIE,QAAQ,CAAC/B,IAAI,cAAA6B,eAAA,gBAAAC,oBAAA,GAAbD,eAAA,CAAe7B,IAAI,cAAA8B,oBAAA,eAAnBA,oBAAA,CAAqBhC,KAAK,EAAE;QACxD,MAAMoC,OAAO,GAAGH,QAAQ,CAAC/B,IAAI,CAACA,IAAI,CAACF,KAAK;QACxCC,QAAQ,CAACmC,OAAO,CAAC;QACjB,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAM+B,KAAK,GAAG;IACZvC,WAAW;IACX0B,UAAU;IACVxB,KAAK;IACLK,YAAY;IACZE,UAAU;IACVsB;EACF,CAAC;EAED,oBACEpC,OAAA,CAACC,WAAW,CAAC4C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzC,QAAA,EAChCA;EAAQ;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7C,EAAA,CA7EWF,YAAY;EAAA,QAKiDL,QAAQ;AAAA;AAAAqD,EAAA,GALrEhD,YAAY;AA+EzB,OAAO,MAAMiD,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG3D,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACoD,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}